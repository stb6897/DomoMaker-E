(()=>{var e={603:e=>{const t=e=>{document.getElementById("errorMessage").textContent=e,document.getElementById("domoMessage").classList.remove("hidden")};e.exports={handleError:t,sendPost:async(e,o,a)=>{const m=await fetch(e,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(o)}),n=await m.json();document.getElementById("domoMessage").classList.add("hidden"),n.error&&t(n.error),n.redirect&&(window.location=n.redirect),a&&a(n)},hideError:()=>{document.getElementById("domoMessage").classList.add("hidden")}}}},t={};function o(a){var m=t[a];if(void 0!==m)return m.exports;var n=t[a]={exports:{}};return e[a](n,n.exports,o),n.exports}(()=>{const e=o(603);let t;const a=t=>{t.preventDefault(),e.hideError();const o=t.target.querySelector("#domoName").value,a=t.target.querySelector("#domoAge").value,m=t.target.querySelector("#domoCoolPoints").value,n=t.target.querySelector("#_csrf").value;return o&&a&&m?(e.sendPost(t.target.action,{name:o,age:a,coolPoints:m,_csrf:n},r),!1):(e.handleError("All fields are required!"),!1)},m=o=>{e.sendPost("/maker",{name:o.target.name,age:-1,coolPoints:-1,_csrf:t},r)},n=e=>(t=e.csrf,React.createElement("form",{id:"domoForm",onSubmit:a,name:"domoForm",action:"/maker",method:"POST",className:"domoForm"},React.createElement("label",{htmlFor:"name"},"Name: "),React.createElement("input",{id:"domoName",type:"text",name:"name",placeholder:"Domo Name"}),React.createElement("div",null,React.createElement("label",{htmlFor:"coolPoints"},"Cool Points: "),React.createElement("input",{id:"domoCoolPoints",type:"number",min:"0",name:"coolPoints"})),React.createElement("div",null,React.createElement("label",{htmlFor:"age"},"Age: "),React.createElement("input",{id:"domoAge",type:"number",min:"0",name:"age"})),React.createElement("input",{id:"_csrf",type:"hidden",name:"_csrf",value:e.csrf}),React.createElement("input",{className:"makeDomoSubmit",type:"submit",value:"Make Domo"}))),c=e=>{if(0===e.domos.length)return React.createElement("div",{className:"domoList"},React.createElement("h3",{className:"emptyDomo"},"No Domos Yet!"));const t=e.domos.map((e=>React.createElement("div",{key:e._id,className:"domo"},React.createElement("img",{src:"/assets/img/domoface.jpeg",alt:"domo face",className:"domoFace"}),React.createElement("h3",{id:"dName",className:"domoName"},"Name: ",e.name," "),React.createElement("h3",{id:"dAge",className:"domoAge"},"Age: ",e.age," "),React.createElement("h3",{id:"dCoolPoints",className:"domoCoolPoints"},"Cool Points: ",e.coolPoints," "),React.createElement("button",{className:"domoDeleteButton",name:e.name,onClick:m},"Delete"))));return React.createElement("div",{className:"domoList"},t)},r=async()=>{const e=await fetch("/getDomos"),t=await e.json();ReactDOM.render(React.createElement(c,{domos:t.domos}),document.getElementById("domos"))};window.onload=async()=>{const e=await fetch("/getToken"),t=await e.json();ReactDOM.render(React.createElement(n,{csrf:t.csrfToken}),document.getElementById("makeDomo")),ReactDOM.render(React.createElement(c,{domos:[]}),document.getElementById("domos")),r()}})()})();